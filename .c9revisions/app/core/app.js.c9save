{"ts":1381015688395,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var app=(\n    function(){\n\n/************\\\n    Scope\n\\************/\n        var config={\n            modulesPath : 'app/module/'\n        }\n        \n        var modules,\n            constructors={},\n            moduleQueue = {},\n            events=[],\n            dataStore={\n                hasWebkitSpeech:(document.createElement(\"input\").hasOwnProperty('webkitSpeech')),\n                hasSpeech:(document.createElement(\"input\").hasOwnProperty('speech')),\n                HTML:{}\n            }\n        \n        function setConfig(userConfig){\n            for(var property in userConfig){\n                if(!userConfig.hasOwnProperty('property'))\n                    return;\n                \n                config[property] = userConfig[property];\n            }\n        }\n\n/************\\\n    Modules\n\\************/\n        function getModules(){\n            modules=document.getElementsByClassName('appModule');\n        }\n        \n        function buildModules(elements){\n            if(!elements){\n                elements=modules;\n                if(!elements)\n                    elements=[];\n            }\n            \n            if( !elements[0])\n                elements=[elements];\n            \n            if( !elements[0].getAttribute)\n                return;\n            \n            var moduleCount=elements.length;\n            \n            for(var i=0; i<moduleCount; i++){\n                var el=elements[i];\n                var moduleType=el.getAttribute('data-moduletype');\n                \n                if(!constructors[moduleType]){\n                    (\n                        function(config,moduleType,moduleQueue,el){\n                            setTimeout(\n                                function(){\n                                    if(moduleQueue[moduleType])\n                                        return;\n                                    \n                                    var module=config.modulesPath+moduleType+'/'+moduleType;\n                                    moduleQueue[moduleType]=true;\n                                    \n                                    var js = document.createElement('script');\n                                    js.setAttribute('async', true);\n                                    js.setAttribute('src', module+'.js');\n                                    document.head.appendChild(js);\n                                    \n                                    if(el.getAttribute('data-css')!='true')\n                                        return;\n                                    \n                                    var css = document.createElement('link');\n                                    css.rel='stylesheet'; \n                                    css.type='text/css'; \n                                    css.setAttribute('href', module+'.css');\n                                    document.head.appendChild(css);\n                                }\n                                ,0\n                            );\n                        }\n                    )(config,moduleType,moduleQueue,el);\n                    if(el.getAttribute('data-html')=='true')\n                        fetchModuleHTML(moduleType);\n                    \n                    continue;\n                }\n                \n                if(app.data.HTML[moduleType])\n                    HTMLLoaded(el,moduleType);\n                \n                constructors[moduleType](el);\n            }\n        }\n        \n        function fetchModuleHTML(moduleType){\n            var xmlhttp;\n                xmlhttp=new XMLHttpRequest();\n            \n            (\n                function(){\n                    xmlhttp.onreadystatechange=function(){\n                        if (xmlhttp.readyState==4 && xmlhttp.status==200){\n                            dataStore.HTML[moduleType]=xmlhttp.responseText;\n                            HTMLLoaded(\n                                document.querySelectorAll('[data-moduletype=\"'+moduleType+'\"]'),\n                                moduleType\n                            );\n                        }\n                    }\n                }\n            )(moduleType);\n            \n            xmlhttp.open('GET',config.modulesPath+moduleType+'/'+moduleType+'.html',true);\n            xmlhttp.setRequestHeader('Content-type','application/x-www-form-urlencoded');\n            xmlhttp.send();\n        }\n        \n        function HTMLLoaded(modules,moduleType){\n            if(!modules.length)\n                modules=[modules];\n            var totalModules=modules.length;\n            for(var i=0; i<totalModules; i++){\n                var module=modules[i];\n                module.innerHTML=dataStore.HTML[moduleType];\n                findAndInitDynamicModules(module);\n            }\n        }\n        \n        function deferredLoad(type){\n            buildModules(document.querySelectorAll('[data-moduletype=\"'+type+'\"]'));\n        }\n        \n        function appendDOMNode(el){\n            (\n                function(){\n                    setTimeout(\n                        function(){\n                            document.querySelector(\n                                el.getAttribute('data-dompath')\n                            ).appendChild(el);\n                        }\n                        ,0\n                    );\n                }\n            )(el);\n        }\n        \n        function checkModuleExists(moduleType){\n            return !!!constructors[moduleType];\n        }\n        \n        function findAndInitDynamicModules(parent){\n            buildModules(parent.querySelectorAll('[data-moduletype]'));\n        }\n        \n        function addConstructor(type, moduleInit){\n            if(constructors[type])\n                return;\n            constructors[type] = moduleInit;\n            if(document.readyState == 'complete')\n                deferredLoad(type);\n        }\n        \n        function initModules(){\n            switch(document.readyState){ \n                case 'interactive' :\n                    //dom not yet ready\n                    break;\n                case 'complete' :\n                    getModules();\n                    buildModules();\n                    break;\n            }\n        }\n\n/************\\\n    Events\n\\************/\n        function registerEvent(eventName,handler){\n            if(!events[eventName])\n                events[eventName]=[];\n\t\t\t\t\n            events[eventName].push(handler);\n        }\n\t\t\n        function removeEvent(eventName){\n            delete events[eventName]\n        }\n\t\t\n        function triggerEvent(eventName){\n            if(!events[eventName])\n                return;\n            \n            var totalEvents=events[eventName].length,\n                args=Array.prototype.slice.call(arguments,1);\n            \n            for(var i=0; i<totalEvents; i++){\n                (\n                    function(event){\n                        setTimeout(\n                            function(){\n                                event.apply(null,args);\n                            }\n                            ,0\n                        );\n                    }\n                )(events[eventName][i],args);\n            }\n        }\n        \n        window.exports=addConstructor;\n        document.onreadystatechange=initModules;\n        \n        return {\n            register        : addConstructor,\n            build           : buildModules,\n            inject          : appendDOMNode,\n            config          : setConfig,\n            on              : registerEvent,\n            off             : removeEvent,\n            trigger         : triggerEvent,\n            exists          : checkModuleExists,\n            data            : dataStore\n        }\n\n    }\n)();"]],"start1":0,"start2":0,"length1":0,"length2":7744}]],"length":7744}
